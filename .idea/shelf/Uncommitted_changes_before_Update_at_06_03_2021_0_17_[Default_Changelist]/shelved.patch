Index: CONFIG.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PIL import ImageFont\r\n\r\n#Дружокб, каждое изменение этого файла лучше избежать\r\nBORDER = 20\r\nIMAGE_OFFSET_X = 68\r\nIMAGE_OFFSET_Y = 37\r\n\r\nLINE_SIZE = 4\r\nHEAD_FONT = ImageFont.truetype('font.ttf',  size=40)  # 24pic ширина 28pic высота\r\nPLAIN_FONT = ImageFont.truetype('font.ttf',  size=28)  # 17pic ширина 20pic  высота\r\nHEAD_SHIFT = 28\r\nPLAIN_SHIFT = 20\r\nINDENTS_OFFSET = 15\r\n\r\n\r\n\r\n# COLORS\r\nWHITE = (255, 255, 255)  # POWER\r\nBLACK = (0, 0, 0)  # LIVES MATTER\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CONFIG.py b/CONFIG.py
--- a/CONFIG.py	(revision 91a2e533d768b4df6af38b777cbfef48d349d7b1)
+++ b/CONFIG.py	(date 1614971837450)
@@ -1,19 +1,21 @@
 from PIL import ImageFont
 
 #Дружокб, каждое изменение этого файла лучше избежать
-BORDER = 20
-IMAGE_OFFSET_X = 68
-IMAGE_OFFSET_Y = 37
-
-LINE_SIZE = 4
-HEAD_FONT = ImageFont.truetype('font.ttf',  size=40)  # 24pic ширина 28pic высота
-PLAIN_FONT = ImageFont.truetype('font.ttf',  size=28)  # 17pic ширина 20pic  высота
-HEAD_SHIFT = 28
-PLAIN_SHIFT = 20
-INDENTS_OFFSET = 15
-
+BORDER = 20 #Рамка
+IMAGE_OFFSET_X = 68 #Вертикальный отступ
+IMAGE_OFFSET_Y = 37 #Горизонтальный отступ
+LINE_SIZE = 4 #Толщина обводки рамки
+INDENTS_OFFSET = 30 #Отступ между абзацаи
 
 
 # COLORS
 WHITE = (255, 255, 255)  # POWER
 BLACK = (0, 0, 0)  # LIVES MATTER
+
+#КАТЕГОРИЧЕСКИ НЕ СОВЕТУЮ ИЗМЕНЯТЬ
+HEAD_FONT = ImageFont.truetype('font.ttf',  size=40) # 24pic ширина 28pic высота
+HEAD_HEIGHT = 28
+HEAD_WIDTH = 24
+PLAIN_FONT = ImageFont.truetype('font.ttf',  size=28)  # 17pic ширина 20pic  высота
+PLAIN_HEIGHT = 20
+PLAIN_WIDTH = 17
Index: const.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PIL import Image, ImageDraw\r\nfrom os import listdir, chdir\r\nfrom sys import exit\r\nfrom time import sleep\r\nfrom CONFIG import *\r\nfrom textwrap import wrap\r\n\r\n\r\n#Читем текст для демотиватора\r\nwith open('text.txt', encoding='utf-8') as file:\r\n    try:\r\n        N = int(file.readline())\r\n\r\n        text = file.readlines()\r\n    except ValueError:\r\n        print('Проверьте заполнение text.txt согласно образцу')\r\n        input()\r\n        exit()\r\nARR = []\r\nfor i in range(0,2*N,2):\r\n    ARR.append([text[i][:-1:],text[i+1][:-1:]])\r\n\r\n\r\n\r\n# Часто работаем с кортежами, пишем нужную функцию округления\r\ndef rround(*args):\r\n    return tuple(map(round, args))\r\n\r\n\r\ndef textprint(text, y_cord: int, font: ImageFont):\r\n    '''В (уважаемом) PIL нет функции ввода в область, пишем ее сами\r\n\t\tВыравнивание по центру'''\r\n    if font.size == 40:\r\n        text = wrap(text, HEAD_LIMIT)\r\n        for line in text:\r\n            x_cord = (result_image.width - len(line) * 24) / 2  # Оп центруем\r\n            draw = ImageDraw.Draw(result_image)\r\n            draw.text(rround(x_cord, y_cord), line, WHITE, HEAD_FONT)\r\n\r\n            y_cord += HEAD_SHIFT * 1.5\r\n    else:\r\n        text = wrap(text, PLAIN_LIMIT)\r\n        for line in text:\r\n            x_cord = (result_image.width - len(line) * 17) / 2\r\n            draw = ImageDraw.Draw(result_image)\r\n            draw.text(rround(x_cord, y_cord), line, WHITE, PLAIN_FONT)\r\n\r\n            y_cord += PLAIN_SHIFT * 1.5\r\n\r\n\r\n\r\n# Подсос избражения\r\nchdir('pic')\r\nif len(listdir()) != 1:\r\n    print('Папка pic должна содержать только 1 изображение')\r\n    sleep(2)\r\n    exit()\r\npic = listdir()[0]\r\nim = Image.open(pic)\r\n\r\n\r\n\r\n# Вкладываем основную пикчу в рамку, рамку+пикчу на демотиватор с надписью\r\nfor i in range(N):\r\n    height = im.height\r\n    width = im.width\r\n    HEAD_TEXT = ARR[i][0]\r\n    PLAIN_TEXT = ARR[i][1]\r\n\r\n\r\n\r\n    background = Image.new('RGB', (width + BORDER, height + BORDER), (0, 0, 0))\r\n    HEAD_LIMIT = (background.width - IMAGE_OFFSET_X) // 24\r\n    PLAIN_LIMIT = (background.width - IMAGE_OFFSET_X) // 17\r\n\r\n\r\n\r\n    draw = ImageDraw.Draw(background)\r\n    draw.rectangle((0, 0, width + BORDER, height + BORDER), None, WHITE, LINE_SIZE)\r\n    background.paste(im, rround(0.5 * BORDER, BORDER * 0.5))\r\n\r\n\r\n\r\n    TEXT_OFFSET = int(\r\n        len(wrap(HEAD_TEXT, HEAD_LIMIT)) * HEAD_SHIFT * 1.5 + len(wrap(PLAIN_TEXT, PLAIN_LIMIT)) * PLAIN_SHIFT * 1.5)\r\n    result_image = Image.new('RGB', (\r\n    background.width + 2 * IMAGE_OFFSET_X, background.height + 2 * IMAGE_OFFSET_Y + TEXT_OFFSET + INDENTS_OFFSET * 2))\r\n    result_image.paste(background, (IMAGE_OFFSET_X, IMAGE_OFFSET_Y))\r\n\r\n\r\n\r\n    # Добавляем текст по классике: ЗАГОЛОВОК текст, маштабируем поле ввода вниз, ширина по консту\r\n    # Отцентровка расчитываеться отдельно\r\n    draw = ImageDraw.Draw(result_image)\r\n    textprint(HEAD_TEXT, background.height + IMAGE_OFFSET_Y + INDENTS_OFFSET, HEAD_FONT)\r\n    Y_PLAIN = background.height + IMAGE_OFFSET_Y + INDENTS_OFFSET + len(wrap(HEAD_TEXT, HEAD_LIMIT))*HEAD_SHIFT*1.5\r\n    textprint(PLAIN_TEXT, Y_PLAIN + INDENTS_OFFSET, PLAIN_FONT)\r\n    result_image.thumbnail(im.size)\r\n    im = result_image\r\nim = Image.open(pic)\r\nresult_image.thumbnail(im.size)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/const.py b/const.py
--- a/const.py	(revision 91a2e533d768b4df6af38b777cbfef48d349d7b1)
+++ b/const.py	(date 1614971563735)
@@ -45,7 +45,7 @@
             draw = ImageDraw.Draw(result_image)
             draw.text(rround(x_cord, y_cord), line, WHITE, PLAIN_FONT)
 
-            y_cord += PLAIN_SHIFT * 1.5
+            y_cord += PLAIN_HEIGHT * 1.5
 
 
 
@@ -82,7 +82,7 @@
 
 
     TEXT_OFFSET = int(
-        len(wrap(HEAD_TEXT, HEAD_LIMIT)) * HEAD_SHIFT * 1.5 + len(wrap(PLAIN_TEXT, PLAIN_LIMIT)) * PLAIN_SHIFT * 1.5)
+        len(wrap(HEAD_TEXT, HEAD_LIMIT)) * HEAD_HEIGHT * 1.5 + len(wrap(PLAIN_TEXT, PLAIN_LIMIT)) * PLAIN_HEIGHT * 1.5)
     result_image = Image.new('RGB', (
     background.width + 2 * IMAGE_OFFSET_X, background.height + 2 * IMAGE_OFFSET_Y + TEXT_OFFSET + INDENTS_OFFSET * 2))
     result_image.paste(background, (IMAGE_OFFSET_X, IMAGE_OFFSET_Y))
@@ -93,7 +93,7 @@
     # Отцентровка расчитываеться отдельно
     draw = ImageDraw.Draw(result_image)
     textprint(HEAD_TEXT, background.height + IMAGE_OFFSET_Y + INDENTS_OFFSET, HEAD_FONT)
-    Y_PLAIN = background.height + IMAGE_OFFSET_Y + INDENTS_OFFSET + len(wrap(HEAD_TEXT, HEAD_LIMIT))*HEAD_SHIFT*1.5
+    Y_PLAIN = background.height + IMAGE_OFFSET_Y + INDENTS_OFFSET + len(wrap(HEAD_TEXT, HEAD_LIMIT))*HEAD_HEIGHT*1.5
     textprint(PLAIN_TEXT, Y_PLAIN + INDENTS_OFFSET, PLAIN_FONT)
     result_image.thumbnail(im.size)
     im = result_image
Index: text.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2\r\nАБИБА ывапролдлорпавывапролдлорпавапролдждлорпавапролдлорпавапролдлорпавапролдлорпапролдлорпапролорпа\r\nАБОБА ывапролдлорпавывапролдлорпавапролдждлорпавапролдлорпавапролдлорпавапролдлорпапролдлорпапролорпа\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\nАБИБА\r\nАБОБА\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/text.txt b/text.txt
--- a/text.txt	(revision 91a2e533d768b4df6af38b777cbfef48d349d7b1)
+++ b/text.txt	(date 1614970809127)
@@ -1,25 +1,9 @@
-2
-АБИБА ывапролдлорпавывапролдлорпавапролдждлорпавапролдлорпавапролдлорпавапролдлорпапролдлорпапролорпа
-АБОБА ывапролдлорпавывапролдлорпавапролдждлорпавапролдлорпавапролдлорпавапролдлорпапролдлорпапролорпа
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
-АБИБА
-АБОБА
+4
+NIGGERS
+WHITE POWER
+NIGGERS
+WHITE POWER
+NIGGERS
+WHITE POWER
+NIGGERS
+WHITE POWER
